---
- name: "OPNsense System Information"
  hosts: localhost
  gather_facts: true
  serial: 1
  
  vars:
    opnsense_host: "{{ opnsense_host | default('172.23.5.1') }}"
    opnsense_api_key: "{{ opnsense_api_key | default('YOUR_OPNSENSE_API_KEY') }}"
    opnsense_api_secret: "{{ opnsense_api_secret | default('YOUR_OPNSENSE_API_SECRET') }}"
    opnsense_verify_ssl: "{{ opnsense_verify_ssl | default(false) }}"
  
  pre_tasks:
    - name: Validate OPNsense connectivity
      uri:
        url: "https://{{ opnsense_host }}/api/core/firmware/info"
        method: GET
        user: "{{ opnsense_api_key }}"
        password: "{{ opnsense_api_secret }}"
        force_basic_auth: yes
        validate_certs: "{{ opnsense_verify_ssl }}"
        timeout: 10
      register: opnsense_connectivity
      failed_when: false
      ignore_errors: true
    
    - name: Set connectivity status
      set_fact:
        opnsense_connected: "{{ opnsense_connectivity.status == 200 }}"
      when: opnsense_connectivity is defined and opnsense_connectivity.status is defined
    
    - name: Set connectivity status default
      set_fact:
        opnsense_connected: false
      when: opnsense_connectivity is not defined or opnsense_connectivity.status is not defined
    
    - name: Display connectivity status with beautiful formatting
      debug:
        msg: |
          ╔═══════════════════════════════════════════════════════════════════════════════╗
          ║                       🔥 OPNsense CONNECTIVITY TEST                          ║
          ╠═══════════════════════════════════════════════════════════════════════════════╣
          ║ Host: {{ opnsense_host }}
          ║ Status: {{ '✅ Connected' if opnsense_connected else '❌ Failed' }}
          ║ {% if opnsense_connected and opnsense_connectivity.json is defined %}
          ║ Product: {{ opnsense_connectivity.json.product_id }}
          ║ Version: {{ opnsense_connectivity.json.product_version }}
          ║ {% elif not opnsense_connected %}
          ║ Error: {{ opnsense_connectivity.msg | default('Connection failed') }}
          ║ {% endif %}
          ║ Timestamp: {{ ansible_date_time.iso8601 }}
          ╚═══════════════════════════════════════════════════════════════════════════════╝

  tasks:
    - name: Get system information
      uri:
        url: "https://{{ opnsense_host }}/api/core/firmware/info"
        method: GET
        user: "{{ opnsense_api_key }}"
        password: "{{ opnsense_api_secret }}"
        force_basic_auth: yes
        validate_certs: "{{ opnsense_verify_ssl }}"
      register: system_info
      when: (info_type | default('system')) in ['system', 'all']
      failed_when: false
      ignore_errors: true
    
    - name: Display system information with beautiful formatting
      debug:
        msg: |
          ╔═══════════════════════════════════════════════════════════════════════════════╗
          ║                       💻 OPNsense SYSTEM INFORMATION                        ║
          ╠═══════════════════════════════════════════════════════════════════════════════╣
          ║ {% if system_info.json is defined %}
          ║ Product: {{ system_info.json.product_id | default('Unknown') }}
          ║ Version: {{ system_info.json.product_version | default('Unknown') }}
          ║ Build: {{ system_info.json.product_name | default('Unknown') }}
          ║ Architecture: {{ system_info.json.product_arch | default('Unknown') }}
          ║ {% else %}
          ║ ❌ Failed to retrieve system information
          ║ {% endif %}
          ╚═══════════════════════════════════════════════════════════════════════════════╝
      when: (info_type | default('system')) in ['system', 'all']
    
    - name: Get firmware information
      uri:
        url: "https://{{ opnsense_host }}/api/core/firmware/info"
        method: GET
        user: "{{ opnsense_api_key }}"
        password: "{{ opnsense_api_secret }}"
        force_basic_auth: yes
        validate_certs: "{{ opnsense_verify_ssl }}"
      register: firmware_info
      when: (info_type | default('system')) in ['firmware', 'all']
    
    - name: Display firmware information with beautiful formatting
      debug:
        msg: |
          ╔═══════════════════════════════════════════════════════════════════════════════╗
          ║                      🔧 OPNsense FIRMWARE INFORMATION                        ║
          ╠═══════════════════════════════════════════════════════════════════════════════╣
          ║ {% if firmware_info.json is defined %}
          ║ Product: {{ firmware_info.json.product_id }}
          ║ Version: {{ firmware_info.json.product_version }}
          ║ Build: {{ firmware_info.json.product_name }}
          ║ Architecture: {{ firmware_info.json.product_arch }}
          ║ {% else %}
          ║ ❌ Failed to retrieve firmware information
          ║ {% endif %}
          ╚═══════════════════════════════════════════════════════════════════════════════╝
      when: (info_type | default('system')) in ['firmware', 'all']
    
    - name: Get interface information
      uri:
        url: "https://{{ opnsense_host }}/api/core/interface/search"
        method: POST
        user: "{{ opnsense_api_key }}"
        password: "{{ opnsense_api_secret }}"
        force_basic_auth: yes
        validate_certs: "{{ opnsense_verify_ssl }}"
        body_format: json
        body:
          current: 1
          rowCount: 100
          sort: {}
          searchPhrase: ""
      register: interface_info
      when: (info_type | default('system')) in ['interfaces', 'all']
      failed_when: false
      ignore_errors: true
    
    - name: Display interface information with beautiful formatting
      debug:
        msg: |
          ╔═══════════════════════════════════════════════════════════════════════════════╗
          ║                     🔌 OPNsense INTERFACE INFORMATION                       ║
          ╠═══════════════════════════════════════════════════════════════════════════════╣
          ║ {% if interface_info.json is defined and interface_info.json.rows is defined %}
          ║ {% for interface in interface_info.json.rows %}
          ║ Interface: {{ interface.if }}
          ║ Description: {{ interface.descr | default('No description') }}
          ║ Status: {{ interface.status | default('Unknown') }}
          ╠═══════════════════════════════════════════════════════════════════════════════╣
          ║ {% endfor %}
          ║ {% else %}
          ║ ❌ Failed to retrieve interface information
          ║ {% endif %}
          ╚═══════════════════════════════════════════════════════════════════════════════╝
      when: (info_type | default('system')) in ['interfaces', 'all']

  post_tasks:
    - name: Display beautiful summary
      debug:
        msg: |
          ╔═══════════════════════════════════════════════════════════════════════════════╗
          ║                    ✅ OPNsense SYSTEM INFORMATION COMPLETE                    ║
          ╠═══════════════════════════════════════════════════════════════════════════════╣
          ║ Information Type: {{ info_type | default('system') }}
          ║ Host: {{ opnsense_host }}
          ║ Status: {{ '✅ Success' if opnsense_connectivity.status == 200 else '❌ Failed' }}
          ║ Completion Time: {{ ansible_date_time.iso8601 }}
          ╠═══════════════════════════════════════════════════════════════════════════════╣
          ║ 💡 Next Steps:                                                              ║
          ║   📊 Review system information above for monitoring and troubleshooting      ║
          ║   🔍 Use OPNsense web interface for detailed configuration                   ║
          ╚═══════════════════════════════════════════════════════════════════════════════╝